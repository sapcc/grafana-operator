apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-operator-api
  namespace: {{.Release.Namespace}}
  labels:
    {{- include "grafana-operator-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "grafana-operator-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "grafana-operator-api.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "grafana-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: api
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.registry }}/grafana-operator:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - apiserver
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /info
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /info
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 1
          failureThreshold: 3
        env:
          - name: CONFIG_FILE
            value: "/etc/config/config.yaml"
          - name: OS_AUTH_URL
            value: "{{ .Values.apiserver.openstack.auth_url }}"
          - name: OS_USER_ID
            value: "{{ .Values.apiserver.openstack.user_id }}"
          - name: OS_USERNAME
            value: "{{ .Values.apiserver.openstack.user_name }}"            
          - name: OS_PASSWORD
            value: "{{ .Values.global.grafanaAsAServicePassword }}"
          - name: OS_DOMAIN_NAME
            value: "{{ .Values.apiserver.openstack.domain_name }}"
        volumeMounts:
          - name: config
            mountPath: /etc/config
            readOnly: true
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: config
        configMap:
          name: apiserver-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
